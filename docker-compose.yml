services:
  redis:
    image: redis
    restart: always

  # taken from https://gist.github.com/nobbynobbs/8ee1e4f493168f09dbffd13a76fac8d0
  kafka:
    image: bitnamilegacy/kafka:3.8
    container_name: kafka
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Start Kraft Setup (Kafka as Controller - no Zookeeper)
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/logs
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      # End Kraft Specific Setup
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,INTERNAL://kafka:9094
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8081:8080"
    restart: "always"
    environment:
      KAFKA_CLUSTERS_0_NAME: "lkorDA4qT6W1K_dk0LHvtg"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
    depends_on:
      - kafka

  producer:
    image: ghcr.io/contribute-so/producer:0.0.2
    container_name: producer
    restart: "always"
    environment:
      REDIS_URL: redis://redis:6379/0
      KAFKA_BOOTSTRAP_SERVERS: kafka:9094
      KAFKA_TOPIC_PREFIX: tributary
    env_file:
      - .env.producer
    depends_on:
      - redis
      - kafka

  consumer-mongo:
    image: ghcr.io/contribute-so/consumer-mongo:0.0.3
    container_name: consumer-mongo
    restart: "always"
    environment:
      REDIS_URL: redis://redis:6379/0
      KAFKA_BOOTSTRAP_SERVERS: kafka:9094
      KAFKA_TOPIC_PREFIX: tributary
      MONGO_DATABASE: prod
    env_file:
      - .env.mongo
    depends_on:
      - redis
      - kafka
